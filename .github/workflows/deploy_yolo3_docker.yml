# This is a basic workflow to help you get started with Actions

name: deploy-yolo3-docker

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
    paths:
      - .github/workflows/deploy_yolo3_docker.yml
      - ./4_Deploy/*
  
  workflow_run:
    workflows: ["train-yolo3-job"]
    types: [completed]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  Workspace: ML-Workspace
  RessourceGroup: MVPSession

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build-yolo:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'push' }}
    
    env:
      MODEL_NAME: yolov3 

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: azure login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZ_AE_CREDS }}
      - name: install azmlcli
        run: az extension add -n azure-cli-ml -y
      - name: attach to workspace
        run: az ml folder attach -w ${{ env.Workspace }} -g ${{ env.RessourceGroup }}
      - name: Download YoloV3 Custom Model from AML Model Registry
        run: |
             modelid=$(az ml model list --latest --model-name ${{ env.MODEL_NAME }} | jq -r .[].id)
             if [ -n "$modelid" ]
             then
              az ml model download --model-id $modelid --target-dir ./
              mv ./outputs/* ./Data/Model_Weights/
              echo "This folder should show the models of interests:"
              ls -alH ./Data/Model_Weights/
             else
              echo "::error::no model found"
             fi
      - name: Docker meta
        id: meta
        uses: crazy-max/ghaction-docker-meta@v2
        with:
          # list of Docker images to use as base name for tags
          images: ${{ secrets.DOCKERHUB_USERNAME }}/ml-carsign
          # generate Docker tags based on the following events/attributes
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
  
  
  build-yolo-tiny:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'push' }}
    
    env:
      MODEL_NAME: yolov3-tiny

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: azure login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZ_AE_CREDS }}
      - name: install azmlcli
        run: az extension add -n azure-cli-ml -y
      - name: attach to workspace
        run: az ml folder attach -w ${{ env.Workspace }} -g ${{ env.RessourceGroup }}
      - name: Download YoloV3 Custom Model from AML Model Registry
        run: |
             modelid=$(az ml model list --latest --model-name ${{ env.MODEL_NAME }} | jq -r .[].id)
             if [ -n "$modelid" ]
             then
              az ml model download --model-id $modelid --target-dir ./
              mv ./outputs/* ./Data/Model_Weights/
              echo "This folder should show the models of interests:"
              ls -alH ./Data/Model_Weights/
             else
              echo "::error::no model found"
             fi
      - name: Docker meta
        id: meta
        uses: crazy-max/ghaction-docker-meta@v2
        with:
          # list of Docker images to use as base name for tags
          images: ${{ secrets.DOCKERHUB_USERNAME }}/ml-carsign-compact
          flavour: latest=true
          # generate Docker tags based on the following events/attributes
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          build-args: IS_TINY=yes
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
